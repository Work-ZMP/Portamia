// 1. ОСНОВЫ SCSS

// 1.1. Вложенные правила
#main p {
    color: #00ff00;
    width: 97%;

    .redbox {
        background-color: #ff0000;
        color: #000000;
    }
}

// 1.2. Ссылка на родителя селектора
a {
    font-weight: bold;
    text-decoration: none;

    &:hover {
        text-decoration: underline;
    }

    body.firefox & {
        font-weight: normal;
    }

    &-sidebar {
        border: 1px solid;
    }
}

// 1.3. Вложенные свойства
.funky {
    font: {
        family: fantasy;
        size: 30em;
        weight: bold;
    }
    // или
    font: 20px/24px fantasy {
        weight: bold;
    }
}

// 1.4. Шаблонные селекторы(доделаю)

// 1.5. Комментарии
/* Это многострочный комментарий.
 * Так как этот тип комментирования
 * поддерживается в CSS, то он
 * попадет в скомпилированный CSS-файл. */
body {
    color: black;
}

// Это однострочный комментарий.
// CSS не поддерживает данный вариант комментирования.
// Поэтому данного комментария не будет в CSS-файле.
a {
    color: green;
}

// 1.6. Переменные
$width: 5em;

// Вы можете обратиться к переменной в свойствах
#main {
    width: $width;
}

// 1.7. Операции
p {
    font: 10px/8px; // Явный CSS, деление отсутствует
    $width: 1000px;
    width: $width/2; // Используется переменная, операция деления
    width: round(1.5) / 2; // Используется функция, операция деления
    height: (500px/2); // Обособление скобками, операция деления
    margin-left: 5px + 8px/2px; // Используется +, операция деления
    height: (1em + 2em) * 3;
}

// 1.8. Миксины (доделаю)
// объявление миксинов
@mixin large-text {
    font: {
        family: Arial;
        size: 20px;
        weight: bold;
    }
    color: #ff0000;
}
@mixin clearfix {
    display: inline-block;

    &:after {
        content: ".";
        display: block;
        height: 0;
        clear: both;
        visibility: hidden;
    }
    * html & {
        height: 1px;
    }
}
// вызов миксинов
.page-title {
    @include large-text;
    padding: 4px;
    margin-top: 10px;
}
// Миксины могут быть также вызваны вне какого-либо правила (то есть в корне документа), при условии, что они не определяют непосредственно правил и не используют ссылку на родителя
@mixin silly-links {
    a {
        color: blue;
        background-color: red;
    }
}
@include silly-links;

// Аргументы в миксинах
@mixin sexy-border($color, $width: 1in) {
    border: {
        color: $color;
        width: $width;
        style: dashed;
    }
}
p {
    @include sexy-border(blue);
}
h1 {
    @include sexy-border(blue, 2in);
}
//либо
h1 {
    @include sexy-border($color: blue, $width: 2in);
}

// Переменные в аргументах
@mixin box-shadow($shadows...) {
    -moz-box-shadow: $shadows;
    -webkit-box-shadow: $shadows;
    box-shadow: $shadows;
}
.shadows {
    @include box-shadow(0px 4px 5px #666, 2px 6px 10px #999);
}

// Блоки контента в миксинах
@mixin apply-to-ie6-only {
    * html {
        @content;
    }
}
@include apply-to-ie6-only {
    #logo {
        background-image: url(/logo.gif);
    }
}

$color: white;
@mixin colors($color: blue) {
    background-color: $color;
    @content;
    border-color: $color;
}
.colors {
    @include colors {
        color: $color;
    }
}
// 2. РАСШИРЕННЫЕ ВОЗМОЖНОСТИ SCSS

// Наследование (@extend)
.error {
    border: 1px #f00;
    background-color: #fdd;
}
.seriousError {
    @extend .error;
    border-width: 3px;
}

.hoverlink {
    @extend a:hover;
}

.comment a.user:hover {
    font-weight: bold;
}

//множественные расширения
.error {
    border: 1px #f00;
    background-color: #fdd;
}
.attention {
    font-size: 3em;
    background-color: #ff0;
}
.seriousError {
    @extend .error;
    @extend .attention;
    border-width: 3px;
}

//цепные расширения
.error {
    border: 1px #f00;
    background-color: #fdd;
}
.seriousError {
    @extend .error;
    border-width: 3px;
}
.criticalError {
    @extend .seriousError;
    position: fixed;
    top: 10%;
    bottom: 10%;
    left: 10%;
    right: 10%;
}

// Функции
$grid-width: 40px;
$gutter-width: 10px;

@function grid-width($n) {
    @return $n * $grid-width + ($n - 1) * $gutter-width;
}

#sidebar {
    width: grid-width(5);
}
// или
#sidebar {
    width: grid-width($n: 5);
}

// Анимация
$animation-duration: 2s;

@keyframes colorChange {
    0% {
        background-color: blue;
    }
    100% {
        background-color: red;
    }
}
.element {
    width: 100px;
    height: 100px;
    animation: colorChange $animation-duration infinite;
}

// Медиазапросы
$breakpoint: 768px;
@media (max-width: $breakpoint) {
    // Ваши стили для маленьких экранов
    .container {
        width: 100%;
    }
}
